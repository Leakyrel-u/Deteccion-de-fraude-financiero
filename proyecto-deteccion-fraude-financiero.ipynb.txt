{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6492730,"sourceType":"datasetVersion","datasetId":3752264}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-03T04:28:10.445724Z","iopub.execute_input":"2024-09-03T04:28:10.446430Z","iopub.status.idle":"2024-09-03T04:28:10.462257Z","shell.execute_reply.started":"2024-09-03T04:28:10.446370Z","shell.execute_reply":"2024-09-03T04:28:10.460662Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#leyendo el dataset\ndataset_path = \"/kaggle/input/credit-card-fraud-detection-dataset-2023/creditcard_2023.csv\"\ndf = pd.read_csv (dataset_path)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:10.464379Z","iopub.execute_input":"2024-09-03T04:28:10.464832Z","iopub.status.idle":"2024-09-03T04:28:16.120211Z","shell.execute_reply.started":"2024-09-03T04:28:10.464784Z","shell.execute_reply":"2024-09-03T04:28:16.118874Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#mostrando resumen del dataset\ndf.describe()","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:16.122261Z","iopub.execute_input":"2024-09-03T04:28:16.122659Z","iopub.status.idle":"2024-09-03T04:28:16.933141Z","shell.execute_reply.started":"2024-09-03T04:28:16.122627Z","shell.execute_reply":"2024-09-03T04:28:16.932061Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#mostrando los valores unicos del dataset para conocer su longitud\nprint(df['Class'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:16.934570Z","iopub.execute_input":"2024-09-03T04:28:16.934968Z","iopub.status.idle":"2024-09-03T04:28:16.947557Z","shell.execute_reply.started":"2024-09-03T04:28:16.934937Z","shell.execute_reply":"2024-09-03T04:28:16.946243Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#extrayendo 12mil filas para testeos mas rapidos\nx_class_0 = df[df[\"Class\"]==0].head(6000)\ny_class_1 = df[df[\"Class\"]==1].head(6000)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:16.950618Z","iopub.execute_input":"2024-09-03T04:28:16.950991Z","iopub.status.idle":"2024-09-03T04:28:17.012467Z","shell.execute_reply.started":"2024-09-03T04:28:16.950961Z","shell.execute_reply":"2024-09-03T04:28:17.011374Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#concatenando y mixeando los datos\nnewdf = pd.concat([x_class_0, y_class_1])\ndf = newdf.sample(frac=1, random_state=42).reset_index(drop=True)\nx = df.drop(\"Class\", axis=1)\ny = df[\"Class\"]","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:17.013619Z","iopub.execute_input":"2024-09-03T04:28:17.013906Z","iopub.status.idle":"2024-09-03T04:28:17.030991Z","shell.execute_reply.started":"2024-09-03T04:28:17.013883Z","shell.execute_reply":"2024-09-03T04:28:17.029699Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"#dividiendo los datos en 3 secciones para chequear el accuracy\nfrom sklearn.model_selection import train_test_split\n# Primer paso: dividir en 60% entrenamiento y 40% restante\nx_train, x_temp, y_train, y_temp = train_test_split(x, y, test_size=0.4, random_state=42)\n\n# Segundo paso: dividir el 40% restante en 20% validación y 20% prueba\nx_val, x_test, y_val, y_test = train_test_split(x_temp, y_temp, test_size=0.5, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:45:44.010578Z","iopub.execute_input":"2024-09-03T04:45:44.010977Z","iopub.status.idle":"2024-09-03T04:45:44.025990Z","shell.execute_reply.started":"2024-09-03T04:45:44.010945Z","shell.execute_reply":"2024-09-03T04:45:44.024636Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#definiendo el rfc de manera simple\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nfrom sklearn.model_selection import cross_val_score\nrf_model = RandomForestClassifier(n_estimators=100, random_state=42)\ncv_scores = cross_val_score(rf_model, x, y, cv=5, scoring=\"f1\")\n#rf_model.fit(x_train, y_train)\n#ypred=rf_model.predict(x_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:28:46.855887Z","iopub.execute_input":"2024-09-03T04:28:46.856271Z","iopub.status.idle":"2024-09-03T04:28:58.152747Z","shell.execute_reply.started":"2024-09-03T04:28:46.856241Z","shell.execute_reply":"2024-09-03T04:28:58.151582Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#entrenando el modelo\nrf_model.fit(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:29:02.345707Z","iopub.execute_input":"2024-09-03T04:29:02.346137Z","iopub.status.idle":"2024-09-03T04:29:03.945172Z","shell.execute_reply.started":"2024-09-03T04:29:02.346045Z","shell.execute_reply":"2024-09-03T04:29:03.944045Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#prediciendo\ny_val_pred= rf_model.predict(x_val)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:29:17.587302Z","iopub.execute_input":"2024-09-03T04:29:17.588070Z","iopub.status.idle":"2024-09-03T04:29:17.617252Z","shell.execute_reply.started":"2024-09-03T04:29:17.588037Z","shell.execute_reply":"2024-09-03T04:29:17.616176Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#chequeando la precision\naccuracy = accuracy_score(y_val, y_val_pred)\nprint(f\"Accuracy en validación: {accuracy}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:29:21.592615Z","iopub.execute_input":"2024-09-03T04:29:21.593012Z","iopub.status.idle":"2024-09-03T04:29:21.601391Z","shell.execute_reply.started":"2024-09-03T04:29:21.592980Z","shell.execute_reply":"2024-09-03T04:29:21.599793Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#entrenando con ultimo set de datos\ny_test_pred=rf_model.predict(x_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:31:13.384631Z","iopub.execute_input":"2024-09-03T04:31:13.385054Z","iopub.status.idle":"2024-09-03T04:31:13.422756Z","shell.execute_reply.started":"2024-09-03T04:31:13.385020Z","shell.execute_reply":"2024-09-03T04:31:13.421156Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#validando el chequeo de la precision\naccuracy = accuracy_score(y_test, y_test_pred)\nprint(f\"Accuracy en validación: {accuracy}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:31:31.589726Z","iopub.execute_input":"2024-09-03T04:31:31.590124Z","iopub.status.idle":"2024-09-03T04:31:31.598601Z","shell.execute_reply.started":"2024-09-03T04:31:31.590093Z","shell.execute_reply":"2024-09-03T04:31:31.597227Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#chequeo de cm\ncm=confusion_matrix(y_test, y_test_pred)\nprint(cm)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:32:54.200001Z","iopub.execute_input":"2024-09-03T04:32:54.200470Z","iopub.status.idle":"2024-09-03T04:32:54.211081Z","shell.execute_reply.started":"2024-09-03T04:32:54.200434Z","shell.execute_reply":"2024-09-03T04:32:54.209660Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#utilizacion de gs\n#importando gd\n#renombrando el rfc para mejor manipulacion\nfrom sklearn.model_selection import GridSearchCV\nrfc = rf_model\n","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:58:29.865749Z","iopub.execute_input":"2024-09-03T04:58:29.866114Z","iopub.status.idle":"2024-09-03T04:58:29.871151Z","shell.execute_reply.started":"2024-09-03T04:58:29.866086Z","shell.execute_reply":"2024-09-03T04:58:29.869985Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#creando diccionario para hps\nhp_dicc = {\n    'n_estimators': [50, 100, 200],  # Número de árboles en el bosque\n    'max_depth': [None, 10, 20, 30],  # Profundidad máxima de los árboles\n    'min_samples_split': [2, 5, 10],  # Número mínimo de muestras necesarias para dividir un nodo interno\n    'min_samples_leaf': [1, 2, 4]  # Número mínimo de muestras necesarias en un nodo hoja\n}","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:58:33.106104Z","iopub.execute_input":"2024-09-03T04:58:33.106485Z","iopub.status.idle":"2024-09-03T04:58:33.112222Z","shell.execute_reply.started":"2024-09-03T04:58:33.106457Z","shell.execute_reply":"2024-09-03T04:58:33.111179Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#definiendo el modelo gs\ngs = GridSearchCV(estimator=rfc, param_grid=hp_dicc, cv=5, n_jobs=-1, verbose=2)\n#entrenando el gs\ngs.fit(x_train, y_train)\n#obteniendo el mejor modelo\ngs_best = gs.best_estimator_\n#prediciendo con gs\ny_val_prediction = gs_best.predict(x_val)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-09-03T04:58:35.278913Z","iopub.execute_input":"2024-09-03T04:58:35.279296Z","iopub.status.idle":"2024-09-03T05:03:42.903194Z","shell.execute_reply.started":"2024-09-03T04:58:35.279266Z","shell.execute_reply":"2024-09-03T05:03:42.901804Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy = accuracy_score(y_val, y_val_prediction)\nprint(f\"Accuracy en validación: {accuracy}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-03T05:03:43.009485Z","iopub.execute_input":"2024-09-03T05:03:43.009936Z","iopub.status.idle":"2024-09-03T05:03:43.019010Z","shell.execute_reply.started":"2024-09-03T05:03:43.009895Z","shell.execute_reply":"2024-09-03T05:03:43.017883Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"Mejores hiperparámetros encontrados:\")\nprint(gs.best_params_)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T05:04:29.688678Z","iopub.execute_input":"2024-09-03T05:04:29.689154Z","iopub.status.idle":"2024-09-03T05:04:29.694774Z","shell.execute_reply.started":"2024-09-03T05:04:29.689042Z","shell.execute_reply":"2024-09-03T05:04:29.693687Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cm = confusion_matrix(y_val, y_val_prediction)\nprint(\"Matriz de Confusión:\")\nprint(cm)","metadata":{"execution":{"iopub.status.busy":"2024-09-03T05:07:02.638615Z","iopub.execute_input":"2024-09-03T05:07:02.639008Z","iopub.status.idle":"2024-09-03T05:07:02.648576Z","shell.execute_reply.started":"2024-09-03T05:07:02.638978Z","shell.execute_reply":"2024-09-03T05:07:02.647391Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import precision_score, recall_score, f1_score\nprint(\"F1-Score:\", f1_score(y_val, y_val_prediction))","metadata":{"execution":{"iopub.status.busy":"2024-09-03T05:08:09.163315Z","iopub.execute_input":"2024-09-03T05:08:09.164475Z","iopub.status.idle":"2024-09-03T05:08:09.174716Z","shell.execute_reply.started":"2024-09-03T05:08:09.164435Z","shell.execute_reply":"2024-09-03T05:08:09.173569Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}